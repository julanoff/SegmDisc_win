http://www.askvg.com/fix-gmail-marks-your-important-emails-as-spam/

--------------------------------------------------
TstValid.cs
using System;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml.Schema;
using System.Xml;
using Simulator.ValidateXml;

namespace TstValid
{
	/// <summary>
	/// Summary description for mqputmsg.
	/// </summary>
	public class TstValid
	{
		/// <summary>
		/// The main entry point for the application.
		/// </summary>
		[STAThread]
		static void Main(string[] args)
		{
			TstValid mqputmsg = new TstValid();
			mqputmsg.Run(args);
		}

		private int Run(string [] args)
		{
			if (args.Length < 1) 
			{
				Console.WriteLine (" File name is required.");	
			}
			else	
			{	
				ValidateXml util = new ValidateXml();
				string XsdFolder = "C:\\RealTimePmnts\\";
				string f_name=args[0];
				StreamReader reader = new StreamReader(f_name);
				string myXml = reader.ReadToEnd();
				//Console.WriteLine (myXml);
				if (util.IsXmlValid(myXml, XsdFolder))
					Console.WriteLine ("good");
				else
					Console.WriteLine ("no good");
			}
			return (0);
		}
	}
}
---------------------------------------------

ValidateXml.cs
using System;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml.Schema;
using System.Xml;

namespace Simulator.ValidateXml
{
	public class ValidateXml
	{
		static private bool stat;
		
		public bool IsXmlValid(string XmlText, string XsdFolder)
		{
			stat = true;
			int pos = XmlText.IndexOf("xmlns=\"urn");
			if (pos == -1) 
			{
				Console.WriteLine ("Schema is missing in the XML");
				return false;
			}
			pos = pos + 7;
			string XsdUrn = "";
			while (XmlText[pos] != '\"' )
			{
				XsdUrn = XsdUrn + XmlText[pos];
				pos ++;
			}
			Console.WriteLine ("Using XSD - " + XsdUrn);
			string[] rfs = XsdUrn.Split(':');
   //Load the XmlSchemaSet.
      XmlSchemaSet schemaSet = new XmlSchemaSet();
      string XsdFile = XsdFolder + rfs[rfs.Length-1] + ".xsd";
      schemaSet.Add(XsdUrn, XsdFile);

      Validate(XmlText, schemaSet);
      return stat;
		}
    private static void Validate(String XmlText, XmlSchemaSet schemaSet)
    {
        Console.WriteLine();
        Console.WriteLine("\r\nValidating XML file {0}...", XmlText.ToString());

        XmlDocument doc = new XmlDocument();
                // load the XSD schema.. is this right?
        doc.Schemas.Add(schemaSet);

				ValidationEventHandler valEventHandler = new ValidationEventHandler(ValidationCallBack);
				try
				{
					doc.LoadXml(XmlText);
					doc.Validate(valEventHandler);
				}
				catch (XmlSchemaValidationException xmlValidationError)
				{
				// need to interogate the Validation Exception, for possible further 
				// processing.
					string message = xmlValidationError.Message;
	        Console.WriteLine("\r\nError Validating XML {0}...", message);
					stat = false;
				}
    }

    //Display any warnings or errors.
    private static void ValidationCallBack(object sender, ValidationEventArgs args)
    {
        if (args.Severity == XmlSeverityType.Warning)
            Console.WriteLine("\tWarning: Matching schema not found.  No validation occurred." + args.Message);
        else
            Console.WriteLine("\tValidation error: " + args.Message);
				stat = false;				
    }
	}
}
